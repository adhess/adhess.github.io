{"version":3,"sources":["components/Home/home.module.scss","components/Home/Home.tsx","components/About/About.tsx","container/App.tsx","serviceWorker.ts","index.tsx","container/app.module.scss","components/About/about.module.scss"],"names":["module","exports","Home","className","css","homeSection","id","particles","params","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","intro","style","fontFamily","line","About","aboutSection","BrowserRouter","require","Route","Link","NavHashLink","App","path","exact","render","navBar","to","hash","scroll","el","scrollIntoView","behavior","block","Button","variant","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b0f42982.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeSection\":\"home_homeSection__2E4VX\",\"particles\":\"home_particles__z8A-k\",\"intro\":\"home_intro__26f9y\",\"line\":\"home_line__Rmyrs\",\"intro-text\":\"home_intro-text__1jH4s\",\"highlight\":\"home_highlight__3hxIL\"};","import React from 'react';\nimport css from './home.module.scss';\nimport Particles from 'react-particles-js';\n\nfunction Home() {\n    return (\n        <div className={css.homeSection} id='home'>\n            <Particles className={css.particles} params={{\n                particles: {\n                    number: {\n                        value: 80,\n                        density: {\n                            enable: true,\n                            value_area: 800\n                        }\n                    },\n                    color: {\n                        value: \"#21c0dc\"\n                    },\n                    shape: {\n                        type: \"circle\",\n                        stroke: {\n                            width: 0,\n                            color: \"#000000\"\n                        },\n                        polygon: {\n                            nb_sides: 5\n                        },\n                    },\n                    opacity: {\n                        value: 0.5,\n                        random: true,\n                        anim: {\n                            enable: false,\n                            speed: 1,\n                            opacity_min: 0.1,\n                            sync: false\n                        }\n                    },\n                    size: {\n                        value: 2,\n                        random: true,\n                        anim: {\n                            enable: false,\n                            speed: 40,\n                            size_min: 0.1,\n                            sync: false\n                        }\n                    },\n                    line_linked: {\n                        enable: true,\n                        distance: 150,\n                        color: \"#21c0dc\",\n                        opacity: 0.4,\n                        width: 1\n                    },\n                }\n            }}/>\n\n            <div className={css.intro}>\n                <div>\n                    <span style={{color: '#D33653', fontFamily: 'Raleway-semibold'}}>Mohamed Yassine</span>\n                    <span style={{color: '#D33653', fontFamily: 'Raleway-semibold'}}>BEN KHALIFA</span>\n                </div>\n\n                <div className={css.line}/>\n                <span style={{color: '#D38338', fontFamily: 'Raleway-semibold'}}>Software engineer</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React from 'react';\nimport css from './about.module.scss';\n\nfunction About() {\n    return (\n        <div className={css.aboutSection}  id='about'>\n            I am here....\n        </div>\n    );\n}\n\nexport default About;\n","import React from 'react';\nimport css from './app.module.scss';\nimport Home from '../components/Home/Home'\nimport About from \"../components/About/About\";\nimport {Button} from \"@material-ui/core\";\n\nconst BrowserRouter = require(\"react-router-dom\").BrowserRouter;\nconst Route = require(\"react-router-dom\").Route;\nconst Link = require(\"react-router-hash-link\").NavHashLink;\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Route path='/' exact render={\n                () => (<div>\n                    <div className={css.navBar}>\n\n                        <Link to={{path: '/', hash: \"#home\"}}\n                              scroll={(el: any) =>\n                                  el.scrollIntoView({\n                                      behavior: 'smooth',\n                                      block: 'start'\n                                  })}>\n                            <Button color='secondary' variant='outlined'>Home</Button>\n                        </Link>\n\n                        <Link to={{path: '/', hash: \"#about\"}}\n                              scroll={(el: any) =>\n                                  el.scrollIntoView({\n                                      behavior: 'smooth',\n                                      block: 'start'\n                                  })}>\n                            <Button color='secondary' variant='outlined'>About</Button>\n                        </Link>\n\n                        <Link to={{path: '/', hash: \"#experience\"}}\n                              scroll={(el: any) =>\n                                  el.scrollIntoView({\n                                      behavior: 'smooth',\n                                      block: 'start'\n                                  })}>\n                            <Button color='secondary' variant='outlined'>Experience</Button>\n                        </Link>\n\n                        <Link to={{path: '/', hash: \"#work\"}}\n                              scroll={(el: any) =>\n                                  el.scrollIntoView({\n                                      behavior: 'smooth',\n                                      block: 'start'\n                                  })}>\n                            <Button color='secondary' variant='outlined'>Work</Button>\n                        </Link>\n\n                        <Link to={{path: '/', hash: \"#resume\"}}\n                              scroll={(el: any) =>\n                                  el.scrollIntoView({\n                                      behavior: 'smooth',\n                                      block: 'start'\n                                  })}>\n                            <Button color='secondary' variant='outlined'>Resume</Button>\n                        </Link>\n\n                    </div>\n                    <Home/>\n                    <About/>\n                </div>)\n            }>\n            </Route>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"app_navBar__38maw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutSection\":\"about_aboutSection__1AKS0\"};"],"sourceRoot":""}